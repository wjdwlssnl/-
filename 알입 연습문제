#4 그리디 알고리즘----------------------------------------
1. 
500*1 100*4 50*1 10*2

3.
140*1 50*1 10*1 -> 3개. 그러나 200원은 100*2로 가능하다.

4.
cost: 5+3+2+16+12+4=42

5.
과제 참조

6.
A-D, D-F, F-C, D-B, B-E, E-G
nearest=[0,3,5,0,1,3,5]

8.
A-D-E
nearest=[0,3,3,0,3]

9.
과제 참조

13.
최적해: {S4,S5}
근사해: C={S1,S2,S3}

14.
근사해: C={S1,S2,S3,S5}

15.
근사해: C={S1,S4,S5,S3} 또는 C={S1,S4,S5,S6}

16. 
이른 종료시간 우선: [0,2] [1,5] [1,6] [3,7] [6,8] [7,8] [5,9] -> 기계 수 4개
최적해: [0,2] [1,6] [1,5] [3,7] [6,8] [5,9] [7,8] -> 기계 수 3대

17.
긴 작업 우선: [3,11] [1,7] [3,8] [8,12] [7,10] [1,3] [11,12] -> 기계 수 4개
최적해: [1,3] [1,7] [3,8] [3,11] [7,10] [8,12] [11,12] -> 기계 수 3대

18. 
깜빡하고 안품

19.
시작시간이 빠른 것부터 오름차순으로 작업을 정렬
선택된 작업이 종료되는 시간 다음을 시작시간으로 갖는 작업들 중 가장 시작시간이 빠른 것을 다음 작업으로 선택

23.
111, 110, 0, 10

24.
10, 11111, 11110, 1110, 110, 0

25.
(1) 맞음
(2), (3) 접두부 겹쳐서 허프만 압축이 아님

26.
n-1, skewed tree일때.


#5 동적 계획 알고리즘-------------------------------------
1. 
D         P
0 3 4 1   0 4 4 0
5 0 1 6   3 0 1 3
4 7 0 5   0 4 0 1
7 2 3 0   3 0 2 0

2,4,5. 
프린트 참조

6. 
과제 참조

7.
E
0 1 2 3 4 5
1 0 1 2 3 4
2 1 1 2 2 3
3 2 2 2 3 3
4 3 3 3 3 4
5 4 4 4 4 3

8.
6회

9.
갱신 시 어떤 연산인지(n, d, i) 표시하는 배열 P를 관리한다.

14~16.
풀 예정



